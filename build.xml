<?xml version="1.0"?>
<project name="one20" default="minify" basedir=".">
	<!-- Include the property files -->
	<property file="${basedir}/build/settings/user.properties"/>
	<property file="${basedir}/build/settings/project.properties"/>
	<property file="${basedir}/build/settings/version.properties"/>
	<property file="${basedir}/build/settings/build.properties"/>
	<property file="${basedir}/build/settings/test.properties"/>
	
	<target name="minify" depends="prepare" description="Minify the CSS and JS files">
		<echo message="Starting: CSS and JS minification"/>
		
		<!-- Compress the JS files with Google Closure Compiler -->
		<apply executable="java" parallel="false" dest="${basedir}/${project.key}">
			<fileset dir="${basedir}${file.separator}${project.key}" includes="**/*.js" excludes="**/*-min.js" />
			<arg line="-jar"/>
			<arg path="${build.lib}${file.separator}${build.lib.jar.compiler}" />
			<arg line="--js"/>
			<srcfile/>
			<arg line="--js_output_file"/>
			<mapper type="glob" from="*.js" to="*-min.js"/>
			<targetfile/>
		</apply>
		
		<!-- Compress the CSS files with Yahoo UI Compressor -->
		<apply executable="java" parallel="false" dest="${basedir}/${project.key}">
			<fileset dir="${basedir}${file.separator}${project.key}" includes="**/*.css" excludes="**/*-min.css" />
			<arg line="-jar"/>
			<arg path="${build.lib}${file.separator}${build.lib.jar.compressor}" />
			<arg line="-v"/>
			<srcfile/>
			<arg line="-o"/>
			<mapper type="glob" from="*.css" to="*-min.css"/>
			<targetfile/>
		</apply>
		
		<echo message="Finished: CSS and JS minification"/>
	</target>
	
	<target name="prepare">
		<echo message="Starting: Environment Preparation"/>
		
		<!-- Make the distribution directory -->
		<mkdir dir="${build.dist}" />
		
		<!-- Make the log directory -->
		<mkdir dir="${build.logs}" />
		
		<!-- Define log file -->
		<record name="${build.logs}${file.separator}${build.logs.ant}" />
		
		<!-- Create the time stamp -->
		<tstamp>
			<format property="build.date" timezone="UTC" pattern="MM/dd/yy hh:mmaa" />
		</tstamp>
		
		<!-- Combine the version parts into full version identifier -->
		<property name="project.version" value="${project.version.major}.${project.version.minor}.${project.version.build}"/>
		
		<echo message="Finished: Environment Preparation"/>
	</target>
	
	<target name="release" depends="prepare,minify,testVarScoper" description="Tags a release and uploads a new version of the setup zip">
		<echo message="Starting: Release of version ${project.version}"/>
		
		<!-- Create a WAR distribution
		<war destfile="${build.release.archive.war}" basedir="${build.export}/${project.key}" webxml="${build.war.web.xml}" update="true">
			<lib dir="${build.war.lib}"/>
			<metainf dir="${build.war}/META-INF"/>
			<webinf dir="${build.war}/WEB-INF"/>
			<fileset dir="${build.export}/${project.key}"/>
		</war>
		 -->
		
		<!-- Update the build version
		<propertyfile file="${build.dist}/settings/version.properties" comment="Version properties">
			<entry key="project.version.build" value="1" operation="+" type="int"/>
		</propertyfile>
		 -->
		
		<echo message="Finished: Release of version ${project.version} complete"/>
	</target>
	
	<target name="testVarScoper" depends="prepare" description="Runs the varScoper">
		<echo message="Starting: VarScoper Tests"/>
		
		<!-- Save the results as a csv -->
		<get dest="${test.varscoper.resultFile}" src="http://${test.host}:${test.port}${test.varscoper.base}/varScoper.cfm?displayformat=csv&amp;filePath=${test.varscoper.filePath}&amp;recursiveDirectory=${test.varscoper.recurse}"/>
		
		<loadfile srcfile="${test.varscoper.resultFile}" property="test.varscoper.csv">
			<filterchain>
				<headfilter skip="1"/>
				
				<trim/>
			</filterchain>
		</loadfile>
		
		<!-- Remove the csv file -->
		<delete file="${test.varscoper.resultFile}"/>
		
		<!-- Fail the build if there are any violations of the var scoping -->
		<fail message="Var Scope Violation: ${line.separator}${test.varscoper.csv}">
			<condition>
				<isset property="test.varscoper.csv"/>
			</condition>
		</fail>
		
		<echo message="Finished: VarScoper Tests"/>
	</target>
</project>